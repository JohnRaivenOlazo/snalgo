@import 'tailwindcss';

@plugin 'tailwindcss-animate';

@custom-variant dark (&:is(.dark *));

@theme {
  --font-pixel: var(--font-pixel);

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-game-board: hsl(var(--game-board));
  --color-game-snake: hsl(var(--game-snake));
  --color-game-snake-head: hsl(var(--game-snake-head));
  --color-game-food: hsl(var(--game-food));
  --color-game-border: hsl(var(--game-border));

  --color-sidebar: hsl(var(--sidebar-background));
  --color-sidebar-foreground: hsl(var(--sidebar-foreground));
  --color-sidebar-primary: hsl(var(--sidebar-primary));
  --color-sidebar-primary-foreground: hsl(var(--sidebar-primary-foreground));
  --color-sidebar-accent: hsl(var(--sidebar-accent));
  --color-sidebar-accent-foreground: hsl(var(--sidebar-accent-foreground));
  --color-sidebar-border: hsl(var(--sidebar-border));
  --color-sidebar-ring: hsl(var(--sidebar-ring));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
  --animate-fade-in: fade-in 0.3s ease-out;
  --animate-fade-out: fade-out 0.3s ease-out;
  --animate-scale-in: scale-in 0.2s ease-out;
  --animate-scale-out: scale-out 0.2s ease-out;
  --animate-slide-in: slide-in 0.3s ease-out;
  --animate-slide-out: slide-out 0.3s ease-out;
  --animate-snake-move: snake-move 0.3s ease-in-out;
  --animate-food-pulse: food-pulse 2s infinite ease-in-out;
  --animate-pixel-shake: pixel-shake 0.5s ease-in-out;
  --animate-float: float 5s infinite ease-in-out;
  --animate-shine: shine 3s linear infinite;
  --animate-pulse-glow: pulse-glow 2s infinite ease-in-out;
  --animate-rotate-slow: rotate-slow 8s linear infinite;
  --animate-bounce-subtle: bounce-subtle 2s infinite ease-in-out;
  --animate-glitch: glitch 0.8s ease-in-out;

  @keyframes accordion-down {
    from {
      height: 0;
      opacity: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
      opacity: 1;
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
      opacity: 1;
    }
    to {
      height: 0;
      opacity: 0;
    }
  }
  @keyframes fade-in {
    0% {
      opacity: 0;
      transform: translateY(10px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes fade-out {
    0% {
      opacity: 1;
      transform: translateY(0);
    }
    100% {
      opacity: 0;
      transform: translateY(10px);
    }
  }
  @keyframes scale-in {
    0% {
      transform: scale(0.95);
      opacity: 0;
    }
    100% {
      transform: scale(1);
      opacity: 1;
    }
  }
  @keyframes scale-out {
    from {
      transform: scale(1);
      opacity: 1;
    }
    to {
      transform: scale(0.95);
      opacity: 0;
    }
  }
  @keyframes slide-in {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(0);
    }
  }
  @keyframes slide-out {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-100%);
    }
  }
  @keyframes snake-move {
    0% {
      transform: scale(0.95);
    }
    50% {
      transform: scale(1.05);
    }
    100% {
      transform: scale(1);
    }
  }
  @keyframes food-pulse {
    0% {
      transform: scale(1);
      filter: brightness(1);
    }
    50% {
      transform: scale(1.1);
      filter: brightness(1.2);
    }
    100% {
      transform: scale(1);
      filter: brightness(1);
    }
  }
  @keyframes pixel-shake {
    0%,
    100% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(-1px);
    }
    75% {
      transform: translateX(1px);
    }
  }
  @keyframes float {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-5px);
    }
  }
  @keyframes shine {
    0% {
      background-position: 200% center;
    }
    100% {
      background-position: -200% center;
    }
  }
  @keyframes pulse-glow {
    0%,
    100% {
      box-shadow: 0 0 5px rgba(0, 255, 0, 0.5);
    }
    50% {
      box-shadow:
        0 0 20px rgba(0, 255, 0, 0.8),
        0 0 30px rgba(0, 255, 0, 0.6);
    }
  }
  @keyframes rotate-slow {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  @keyframes bounce-subtle {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-4px);
    }
  }
  @keyframes glitch {
    0% {
      transform: translate(0);
    }
    20% {
      transform: translate(-2px, 2px);
    }
    40% {
      transform: translate(-2px, -2px);
    }
    60% {
      transform: translate(2px, 2px);
    }
    80% {
      transform: translate(2px, -2px);
    }
    100% {
      transform: translate(0);
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
  :root {
    --background: 230 15% 5%;
    --foreground: 0 0% 98%;

    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;

    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;

    --primary: 217 91.2% 59.8%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217 91.2% 59.8%;
    --secondary-foreground: 0 0% 98%;

    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;

    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;

    --game-board: 240 15% 8%;
    --game-snake: 142 80% 50%;
    --game-snake-head: 142 80% 55%;
    --game-food: 358 85% 65%;
    --game-border: 240 25% 20%;

    --radius: 0;
  }

  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    image-rendering: pixelated;
    background-image: 
      radial-gradient(rgba(50, 50, 50, 0.1) 2px, transparent 2px), 
      radial-gradient(rgba(50, 50, 50, 0.05) 1px, transparent 1px);
    background-size: 40px 40px, 20px 20px;
    background-position: 0 0, 20px 20px;
  }

  .pixel-borders {
    box-shadow: 
      0 4px 0 0 rgba(0, 0, 0, 0.3),
      inset 0 4px 0 0 rgba(255, 255, 255, 0.1);
    border: 2px solid rgba(255, 255, 255, 0.05);
  }

  .pixel-perfect {
    image-rendering: pixelated;
    image-rendering: crisp-edges;
  }

  .pixel-text {
    text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);
  }

  .pixel-transition {
    transition: all 0.1s steps(5);
  }
  
  .retro-glow {
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.7), 0 0 10px rgba(127, 200, 255, 0.5);
  }
  
  .snake-gradient {
    background: linear-gradient(90deg, hsl(142, 80%, 45%) 0%, hsl(142, 80%, 55%) 100%);
  }
  
  .shimmer-text {
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.5), transparent);
    background-size: 200% auto;
    animation: shine 3s linear infinite;
    -webkit-background-clip: text;
    background-clip: text;
  }
  
  .grid-background {
    background-image: linear-gradient(rgba(255, 255, 255, 0.05) 1px, transparent 1px),
                      linear-gradient(90deg, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
    background-size: 20px 20px;
  }
  
  .neon-border {
    box-shadow: 0 0 5px rgba(127, 255, 200, 0.5), 
                0 0 10px rgba(127, 255, 200, 0.3);
  }
  
  .game-container {
    position: relative;
    overflow: hidden;
  }
  
  .game-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      repeating-linear-gradient(
        0deg,
        rgba(20, 20, 20, 0.1),
        rgba(20, 20, 20, 0.1) 2px,
        transparent 2px,
        transparent 4px
      );
    pointer-events: none;
    z-index: 100;
    opacity: 0.4;
  }
}
